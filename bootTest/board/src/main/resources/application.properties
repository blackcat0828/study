# board mysql 데이터베이스 연결 정보 03.08
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:mysql://localhost:3308/boot?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Seoul
spring.datasource.hikari.username=boot
spring.datasource.hikari.password=1234
spring.datasource.hikari.connection-test-query=select 1

#CamelCase 적용 03.09
#데이터베이스 컬럼과 자바 멤버변수 Mapping처리
mybatis.configuration.map-underscore-to-camel-case=true

#rest방식을 이용시 
#hidden으로 선언된 속성을 
#name=_methodd으로 설정하고 PUT,DELETE 전송방식을 이용시
#HiddenHttpMethodFilter를 사용하는데 스프링 부트 2.1.X이상
#버전에서는 이기능이 내장되어 있는데 이것을 enabled=true로
#활성화 시켜준다.
spring.mvc.hiddenmethod.filter.enabled=true

#JPA를 활용한 게시판 관련 테이블 생성 선언 03.16
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#JPA Entity(테이블) 연관관계에 의해 테이블 생성시 관련된
#DDL을 자동으로 생성해준다.
spring.jpa.generate-ddl=true
# 새로운 id(Primary Key) 생성하는 옵션 지정
spring.jpa.hibernate.use-new-id-generator-mappings=false
#데이터베이스 생성 옵션 03.17
#애플리케이션 실행시 항상 데이터베이스 새로 생성
# 1. none : 자동 생성 하지 않음
# 2. create : 애플리케이션 실행시 항상 다시 생성
# 3. create-drop 
#애플리케이션 실행시 생성했다가 애플리케이션 종료후  제거
# 4. update
#     애플리케이션 시작시 Entity 자바 클래스와 DB 스키마 구조를
#     비교하여 DB쪽에 생성되어 있지 않은 테이블 혹은 컬럼을 추가
#     하는데 이때 다른 테이블 혹은 컬럼은 삭제처리는 하지 않는다.
# 5. validate
#     애플리케이션 시작시 Entity 클래스와 DB 스키마 구조를 비교
#     하여 같은지만 검증하고 만약 다르면 예외가 발생한다.
spring.jpa.hibernate.ddl-auto=update
